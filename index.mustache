<!DOCTYPE HTML>
<html>

<head>
  <meta charset="utf-8" />
  <title>Adrien Di  Pasquale</title>
  <link href='tachyons-4.11.1.css' rel='stylesheet' type='text/css'>
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<body class="helvetica">

<canvas id="lines" height="150">
  Texte alternatif pour les navigateurs ne supportant pas Canvas.
</canvas>

<main class="ph3 ph5-ns mb5">

  <div class="flex-ns mw7 pt3 center items-center">
    <div class="w-20-ns flex items-center">
      <div class="w-40 w-auto-ns">
        <img src="avatar.jpg" class="br-100 h4 w4 h-auto-ns w-auto-ns aspect-ratio--1x" />
      </div>
      <div class="w-60 dn-ns pl3">
        <h1 class="code mt0 f4">
          Adrien Di&nbsp;Pasquale
        </h1>
      </div>
    </div>

    <div class="w-80-ns pl4-ns">
      <h1 class="code mt0 dn">
        Adrien Di&nbsp;Pasquale
      </h1>
      <div class="measure lh-copy">
        <p>
          Bonjour ! I am a full-stack web developer. I have worked at <a href="https://www.drivy.com" class="black">Drivy</a> and <a href="https://www.pricingassistant.com" class="black">Pricing Assistant</a>. I am now free-lancing with <a href="https://www.outofscreen.com" class="black">Out Of Screen</a>, for companies such as <a href="http://taleme-shop.com/" class="black">Tale Me</a>, <a href="https://www.checksub.com" class="black">Checksub</a>. I also give lectures at <a href="https://www.lewagon.com/" class="black">Le Wagon</a> coding bootcamp.
          </p>
          <p>
            My main areas of expertise are Ruby&nbsp;On&nbsp;Rails backends, Python and Web&nbsp;scraping. I speak french, english, italian and spanish.
          </p>
      </div>
      <div class="mv3 f4 measure">
        <a class="f5 link dim br1 ph3 pv2 mb2 dib white bg-purple" href="mailto:adrien@dipasquale.fr">
        I am currently looking for missions, hire me !
        </a>
      </div>
      <div class="">
        <a class="link black-70 hover-silver dib h2 w2 mr3" href="https://github.com/adipasquale" title="GitHub">
          <svg fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill-rule="evenodd" clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414"><path d="M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8"></path></svg>
        </a>
        <a class="link hover-silver black-70 dib h2 w2 mr3" href="https://www.linkedin.com/in/adriendipasquale/?locale=en_US" title=" linkedin">
          <svg fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill-rule="evenodd" clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414"><path d="M13.632 13.635h-2.37V9.922c0-.886-.018-2.025-1.234-2.025-1.235 0-1.424.964-1.424 1.96v3.778h-2.37V6H8.51V7.04h.03c.318-.6 1.092-1.233 2.247-1.233 2.4 0 2.845 1.58 2.845 3.637v4.188zM3.558 4.955c-.762 0-1.376-.617-1.376-1.377 0-.758.614-1.375 1.376-1.375.76 0 1.376.617 1.376 1.375 0 .76-.617 1.377-1.376 1.377zm1.188 8.68H2.37V6h2.376v7.635zM14.816 0H1.18C.528 0 0 .516 0 1.153v13.694C0 15.484.528 16 1.18 16h13.635c.652 0 1.185-.516 1.185-1.153V1.153C16 .516 15.467 0 14.815 0z" fill-rule="nonzero"></path></svg>
        </a>
        <a class="link hover-silver black-70 dib h2 w2 mr3" href="https://twitter.com/hypertextadrien" title="Twitter">
          <svg fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill-rule="evenodd" clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414"><path d="M16 3.038c-.59.26-1.22.437-1.885.517.677-.407 1.198-1.05 1.443-1.816-.634.375-1.337.648-2.085.795-.598-.638-1.45-1.036-2.396-1.036-1.812 0-3.282 1.468-3.282 3.28 0 .258.03.51.085.75C5.152 5.39 2.733 4.084 1.114 2.1.83 2.583.67 3.147.67 3.75c0 1.14.58 2.143 1.46 2.732-.538-.017-1.045-.165-1.487-.41v.04c0 1.59 1.13 2.918 2.633 3.22-.276.074-.566.114-.865.114-.21 0-.416-.02-.617-.058.418 1.304 1.63 2.253 3.067 2.28-1.124.88-2.54 1.404-4.077 1.404-.265 0-.526-.015-.783-.045 1.453.93 3.178 1.474 5.032 1.474 6.038 0 9.34-5 9.34-9.338 0-.143-.004-.284-.01-.425.64-.463 1.198-1.04 1.638-1.7z" fill-rule="nonzero"></path></svg>
        </a>
      </div>
    </div>
  </div>

  <div class="mw7 mt5 mt4-ns center">
    <h2 class="code">
      HyperText
    </h2>
    <ul class="list pa0">
      {{#tweets}}
        <li class="flex-ns mv2">
          ☯︎&nbsp;
          <div class="truncate-ns di db-ns" title="{{description}}">
            <a href="{{url}}" class="purple">
              {{title}}
            </a>
            ·
            {{description}}
          </div>
          <div class="ml1 dib nowrap">
            {{#hashtags}}
              <div class="bg-black-20 br-pill dib ph1 f6 black-70">
                {{name}}
              </div>
            {{/hashtags}}
          </div>
        </li>
      {{/tweets}}
    </ul>
    <div class="mv3 black-60 f6">
      These links were originally posted on my twitter account, I archive them here.
    </div>
  </div>

</main>

<script type="text/javascript" src="underscore-min.js"></script>
<script type="text/javascript" src="jquery-2.0.3.min.js"></script>

<script type="text/javascript">

  var LINES_COUNT = 14,
      MAX_PEAK_HEIGHT = 80,
      MIN_PEAKS_COUNT_PER_LINE = 10,
      MAX_PEAKS_COUNT_PER_LINE = 16,
      POINTS_PER_LINE = 70;
      // segmentWidth = 20;

  var topMargin = MAX_PEAK_HEIGHT + 0.5;

  var canvas = document.getElementById("lines");
  var lines;
  var segmentWidth;

  var getRandomPeak = function(){
    return Math.floor((Math.random() * MAX_PEAK_HEIGHT));
  };

  var doResize = function(){
    lines = [];
    var ctx = canvas.getContext("2d");
    canvas.width = window.innerWidth;
    segmentWidth = Math.round(canvas.width / (POINTS_PER_LINE - 1))

    for (var i = 0; i < LINES_COUNT; i++) {
      newLine = {
        "height": topMargin + Math.round(i * (ctx.canvas.height - topMargin) / LINES_COUNT),
        "points": []
      }

      _.times(POINTS_PER_LINE, function(){ newLine.points.push(0); });

      var peaksCount = Math.floor((Math.random() * MAX_PEAKS_COUNT_PER_LINE) + MIN_PEAKS_COUNT_PER_LINE);
      var firstPeakAt = Math.round(POINTS_PER_LINE / 2 - peaksCount / 2);
      for (var p = firstPeakAt; p < firstPeakAt + peaksCount; p++) {
        newLine.points[p] = getRandomPeak();
      }
      lines.push(newLine);
    }
  };

  var draw = function(event){
    var ctx = canvas.getContext("2d");
    canvas.width = canvas.width;  // this clears the canvas

    // var cursorX = event === undefined ? Math.round(canvas.width / 2) : event.pageX;
    if (event !== undefined) {
      var closestLine = _.min(lines, function(line){
        return Math.abs(line.height - event.pageY);
      });

      var reach = _.random(0, 2);
      var pointIdx = Math.round(event.pageX / segmentWidth) - reach;
      for (var idx = pointIdx; idx < pointIdx + reach * 2 + 1; idx++) {
        closestLine.points[idx] = _.random(closestLine.points[idx] * 0.4, Math.min(Math.max(closestLine.points[idx] * 1.2, 0.4 * MAX_PEAK_HEIGHT), MAX_PEAK_HEIGHT));
      }
    }

    // randomize a little bit
    // _.each(lines, function(line){
    //   line.points = _.map(line.points, function(h){ return _.random(h * 0.8, Math.min(Math.max(h*1.2, 0.1 * MAX_PEAK_HEIGHT), MAX_PEAK_HEIGHT)); });
    // });

    _.each(lines, function(line){
      ctx.beginPath();
      var currentX = 0;

      // draw first segment
      ctx.moveTo(0, line.height);
      _.each(line.points, function(pointHeight, idx) {
        if (idx > 0)  // this matches the upper moveTo
          ctx.lineTo(segmentWidth * idx, line.height - pointHeight);
      });

      // ctx.closePath();
      // ctx.lineWidth = 1;  // default
      ctx.fillStyle = "white";
      ctx.stroke();
      ctx.fill();
    });

  };

  canvas.addEventListener("mouseover", draw, false);
  canvas.addEventListener("mousemove", draw, false);

  window.onresize = function(){
    doResize();
    draw();
  };

  doResize();
  draw();
</script>

</body>

</html>