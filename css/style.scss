@import 'bourbon/bourbon';
@import 'reset.css';

/* Layout constants */

$side-sections-width: 20em;
$center-section-width: 30em;
$layout-container-color: #C0BB81;
$body-background-color: #834E1C;
$layout-container-border: 1px solid #334A1A;

/* Text styling */

html{
  font-size: 100%;
}
body{
  font-size: 1em;
  line-height: 1.5em;
  font-family: 'Ubuntu', sans-serif;
}
a {
  color: #834E1C;
  text-decoration: none;
  &:hover{
    text-decoration: underline;
  }
}
h1{
  font-size: 1.5em;
  line-height: 1.5em;
  margin-bottom: 0.5em;
}
h2{
  font-size: 1.3em;
  line-height: 1.3em;
  margin: 1em 0 0.5em 0;
  &.no-top-margin{
    margin-top: 0;
  }
}
p {
  margin: 1em 0 1em 0;
}
.clear{
  clear: both;
}
.hide{
  display: none;
}

/* custom common mixins */

@mixin noise{
  background: url('../images/transparent-noise.png') repeat;
}
@mixin box-sizing($sizing) {
  -webkit-box-sizing: $sizing;
   -moz-box-sizing: $sizing;
    -ms-box-sizing: $sizing;
     -o-box-sizing: $sizing;
        box-sizing: $sizing;
}
// redefine the respective limits for layouts
$break-small: $side-sections-width + $center-section-width + 3em; /* the 3em is to account for the drop shadow and change language widget. it was not calculated formally though */
$break-large: 2 * $side-sections-width + $center-section-width + 3em;
@mixin respond-to($media) {
  @if $media == one-col {
    @media only screen and (max-width: $break-small) { @content; }
  }
  @else if $media == two-cols {
    @media only screen and (min-width: $break-small + 0.01em) and (max-width: $break-large - 0.01em) { @content; }
  }
  @else if $media == one-or-two-cols {
    @media only screen and (max-width: $break-large - 0.01em) { @content; }
  }
  @else if $media == two-or-three-cols {
    @media only screen and (min-width: $break-small + 0.01em) { @content; }
  }
  @else if $media == three-cols {
    @media only screen and (min-width: $break-large) { @content; }
  }
}

/* Global Layout */

html, body{
  height: 100%;
  @include respond-to(three-cols){
    overflow: hidden;
  }
}
body{
  @include noise;
  background-color: $body-background-color;
  @include respond-to(two-or-three-cols) {
    /* this box-sizing allows adding a padding withouth messing up the */
    /* inherited 100% height */
    @include box-sizing(border-box);
    padding: 2%;
  }
}

#layout-container{
  @include noise;
  background-color: $layout-container-color;
  position: relative;
  @include respond-to(one-col) { 
    width: 100%; 
  }
  @include respond-to(two-or-three-cols) { 
    @include box-shadow(0 0 5px 3px hsla(0, 0%, 0%, 0.65));
    border: $layout-container-border;
    margin: auto;
  }
  @include respond-to(two-cols){
    width: $side-sections-width + $center-section-width;
  }
  @include respond-to(three-cols){
    height: 100%;
    width: 2*$side-sections-width + $center-section-width;
  }
  #layout-content-wrapper{
    @include respond-to(two-or-three-cols) {
      @include box-sizing(border-box);
    }
    @include respond-to(two-cols) {
      padding-bottom: 2.8em; /* tricky : we want an additional margin of 1em above footer */
    }
    @include respond-to(three-cols){
      height: 100%;
      padding-bottom: 1.8em; /* footer's height is 2em, but line-height is 0.9em, so from upper container, it's 1.8em */
    }
  }
}
.layout-section{
  @include respond-to(one-col) {
    width: 100%; 
  }
  @include respond-to(two-cols) {
    float: left;
  }
  @include respond-to(three-cols) { 
    float: left;
    height: 100%;
  }
}
.side-section{
  overflow: auto;
  @include respond-to(one-col) {
    width: 100%; 
  }
  @include respond-to(two-or-three-cols) {
    padding: 2%;
    @include box-sizing(border-box);
    width: $side-sections-width;
  }
}
#about-me{
  @include respond-to(one-col){
    padding: 2% 2% 0 2%; /* p1: we need to add some padding everywhere for one-col, except for experiences list */
  }
}
#experiences{
  @include respond-to(one-col) {
    width: 100%;
    h2{
      padding-left: 2%; /* -> p1 */
    }
  }
  @include respond-to(two-or-three-cols) {
    padding-top: 2%;
    width: $center-section-width;
    @include box-sizing(border-box);
  }
  @include respond-to(two-cols) {
    padding-right: 2%; /* detach experiences list from right border */
  }
}
#extra{
  @include respond-to(one-col){
    padding: 0 2% 0 2%; /* p1: we need to add some padding everywhere for one-col, except for experiences list */
  } 
}

/* About Me (left column) */

#about-me{
  .photo{
    float: left;
    margin-right: 1em;
    img{
      width: 6em;
      // @include box-shadow(0 0 5px 1px hsla(0, 0%, 0%, 0.65));
      @include border-radius(3px);
    }
  }
  .intro{
    img{
      max-height: 15px;
      margin-right: 5px;
    }
  }
}


/* Experiences (center column) */

#experiences{
  overflow: hidden;
  h2{
    position: absolute;
  }
  #experiences-wrapper{
    @include box-sizing(border-box);
    padding-top: 2.5em;
    height: 100%;
    ul{
      list-style: none;
      height: 100%;
      overflow: auto;
      li{
        position: relative;
        width: 100%;
        @include noise;
        &.even{
          background-color: #CBD4D0;
        }
        &.odd{
          background-color: #717E6F;
        }
        .experience{
          @include box-sizing(border-box);
          width: 100%;
          height: 3.5em;
          overflow: hidden;
          padding: 1% 0 0 12%;
          background-repeat: no-repeat;
          background-size: auto 35px;
          background-position: 2.5% 7px;
          &.school{
            background-image: url('../images/icon-school.svg');
          }
          &.work{
            background-image: url('../images/icon-chair.svg');
          }
          &.perso{
            background-image: url('../images/icon-idea.svg');
          }
          .abstract{
            cursor: pointer;
            .date{
              width: 10%;
              float: right;
              height: 100%;
              font-size: 80%;
              line-height: 50px;
            }
            h1{
              font-size: 110%;
              line-height: 50px;
              display: inline-block;
            }
            .subtitle{
              font-style: italic;
              display: inline-block;
              margin: 0 12% 0 10px;
            }
          }
          .content{
            display: none;
            margin-right: 10%;
          }
          &.unfolded{
            min-height: 50px;
            height: auto;
            .content{
              display: block;
            }
          }
        }
      }
    }
  }
}

/* Extra (right column) */

#extra{
  @include respond-to(one-col){
    margin-top: 1em;
  }
  @include respond-to(two-cols){
    width: 100%;
    padding: 0;
    margin-top: 2em;
    h2{
      margin-top: 0;
    }
    #keywords-sub-section{
      width: $center-section-width;
      padding-right: 2%; /* follow experiences list padding */
    }
    #langs-sub-section{
      padding-left: 2em;
      width: $side-sections-width;
    }
    .layout-sub-section{
      @include box-sizing(border-box);
      float: right;
    }
  }
  ul#keywords{
    width: 100%;
    li{
      float: left;
      button{
        cursor: pointer;
        background-color: transparent;
        border: 1px solid #834E1C;
        @include border-radius(2px);
        margin: 2px;
        padding: 0;
        color: #000;
        &:hover, &.selected{
          background-color: #834E1C;
          color: #FFF;
        }
      }
    }
  }
  .langs{
    padding-left: 30px;
    background-repeat: no-repeat;
    background-position: left center;
    margin-bottom: 4px;
    &.fluent{
      background-image: url('../images/glyphicons_184_volume_up.png');
    }
    &.intermediate{
      background-image: url('../images/glyphicons_183_volume_down.png');
    }
    &.basic{
      background-image: url('../images/glyphicons_182_mute.png');
    }
  }
}

/* Footer */

#footer{
  width: 100%;
  height: 2em;
  font-size: 0.9em;
  overflow: hidden;
  background-color: rgba(0,0,0,0.1);
  line-height: 2em;
  border-top: $layout-container-border;
  #fork-me{
    float: right;
    padding-right: 1em;
  }
  #footer-content{
    padding-left: 1em;
    #mail-me{
      padding-right: 1em;
      padding-left: 1em;
      background-image: url('../images/gmail-icon.png');
      background-repeat: no-repeat;
      background-size: 1em 1em;
      background-position: left bottom;
    }
    .external-links{
      display: inline; 
      li{
        display: inline-block;
        margin-left: 20px;
      }
    }
  }
  @include respond-to(one-col){
    margin-top: 1em; /* in the case of one column, the margin can be put directly here, since positioning is relative */
  }
  @include respond-to(two-or-three-cols) {
    position: absolute;
    bottom: 0;
  }
}

/* language widget */

#change-language{
  position: absolute;
  li{
    @include box-sizing(border-box);
    position: relative;
    width: 30px;
    margin-bottom: 10px;
    @include noise;
    background-color: $layout-container-color;
    a{
      display: block;
      width: 100%;
      height: 100%;
      background-repeat: no-repeat;
      background-position: center center;
      &:hover{
        text-decoration: none;
      }
      &.en{
        background-image: url('../images/flags/en-transparent.png');
        &:hover{
          background-image: url('../images/flags/en.png');
        }
      }
      &.fr{
        background-image: url('../images/flags/fr-transparent.png');
        &:hover{
          background-image: url('../images/flags/fr.png');
        }
      }
    }
  }
  @include respond-to(one-col) {
    top: 0;
    right: 0;
    li{
      display: block;
      float: left;
    }
  }
  @include respond-to(two-or-three-cols) {
    top: 20px;
    left: -31px; /* we are using a tweak on width, instead of proper z-indexes because of a hover problem with negative z-idx */
    li{
      @include border-radius(3px 0 0 3px);
      &.selected{
        width: 31px;
        border-top: $layout-container-border;
        border-left: $layout-container-border;
        border-bottom: $layout-container-border;
      }
    }
  }
}